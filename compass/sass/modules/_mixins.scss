@mixin clearfix() {
    // http://nicolasgallagher.com/micro-clearfix-hack/
    // USAGE: @include clearfix();
    & {
        *zoom: 1;
    }
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin childs-vertical-align($type: middle, $no-gap: false) {
    @if ($no-gap == 'true') {
        font-size: 0;
    }
    &:before {
        content: "";
        display: inline-block;
        vertical-align: $type;
        height: 100%;
    }
    &>* {
        display: inline-block;
        vertical-align: $type;
    }
}

// ie10+
@mixin flex-childs-vertical-align ($type: center, $justify: space-between) {

    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -moz-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;

    @if $type == flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    } @else if $type == flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    } @else {
        -webkit-box-align: $type;
        -ms-flex-align: $type;
    }
    -webkit-align-items: $type;
    -moz-align-items: $type;
    align-items: $type;

    @if $justify == flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    } @else if $justify == flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    } @else if $justify == space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    } @else if $justify == space-around {
        -ms-flex-pack: distribute;
    } @else {
        -webkit-box-pack: $justify;
        -ms-flex-pack: $justify;
    }
    -webkit-justify-content: $justify;
    -moz-justify-content: $justify;
    justify-content: $justify;
}

// ie9
@mixin flex-childs-vertical-align-ie ($type: center, $justify: justify) {
    display: box;
    box-align: $type;
    box-pack: $justify;
}

@mixin custom-cursor($type: default) {
    @if($type == 'close') {
        cursor: inline-image('cursors/close.png') 30 30, not-allowed;
    }
    @if($type == 'left') {
        cursor: inline-image('cursors/left.png') 30 30, move;
    }
    @if($type == 'right') {
        cursor: inline-image('cursors/right.png') 30 30, move;
    }
}

@mixin rotate() {
    @include keyframes(rot) {
        0% {
            transform: rotate(0deg)
            translate(0)
            rotate(0deg);
        }
        50% {
            transform: rotate(180deg)
            translate(-20px)
            rotate(-180deg);
        }
        100% {
            transform: rotate(360deg)
            translate(0)
            rotate(-360deg);
        }
    }
    @include animation(rot $animation_time $animation_time/2 linear);
}

.image_eff {
    &:before,
    &:after {
        content: "";
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
    &:before {
        z-index: 5;
        background: rgba($overlay_blue, .4);
    }
    &:after {
        z-index: 5;
        @include background-image(radial-gradient(100% 100%, rgba($white, 0) 0%, rgba($black, .4) 100%));
    }
}